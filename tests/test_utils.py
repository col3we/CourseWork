import os
from unittest.mock import patch

import pandas as pd

from src.utils import XLSX_file_read


@patch("pandas.read_excel")
def test_XLSX_file_read(mock_get):
    data = {
        "Дата операции": ["22.01.2018 18:38:02", "30.11.2020 19:13:18"],
        "Дата платежа": ["24.01.2018", "30.11.2020"],
        "Номер карты": ["*7197", "*7197"],
        "Статус": ["OK", "OK"],
        "Сумма операции": [-124.9, -45.0],
        "Валюта операции": ["RUB", "RUB"],
        "Сумма платежа": [-124.9, -45.0],
        "Валюта платежа": ["RUB", "RUB"],
        "Кэшбэк": [0, 3],
        "Категория": ["Фастфуд", "Транспорт"],
        "MCC": [5814.0, 4111.0],
        "Описание": ["Бургер Кинг", "Троллейбус"],
        "Бонусы (включая кэшбэк)": [2, 5],
        "Округление на инвесткопилку": [0, 0],
        "Сумма операции с округлением": [124.9, 45.0],
    }
    df = pd.DataFrame(data)
    mock_get.return_value = df
    assert XLSX_file_read() == [
        {
            "Дата операции": "22.01.2018 18:38:02",
            "Дата платежа": "24.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -124.9,
            "Валюта операции": "RUB",
            "Сумма платежа": -124.9,
            "Валюта платежа": "RUB",
            "Кэшбэк": 0,
            "Категория": "Фастфуд",
            "MCC": 5814.0,
            "Описание": "Бургер Кинг",
            "Бонусы (включая кэшбэк)": 2,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 124.9,
        },
        {
            "Дата операции": "30.11.2020 19:13:18",
            "Дата платежа": "30.11.2020",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -45.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -45.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": 3,
            "Категория": "Транспорт",
            "MCC": 4111.0,
            "Описание": "Троллейбус",
            "Бонусы (включая кэшбэк)": 5,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 45.0,
        },
    ]
    mock_get.assert_called_once_with(os.getcwd()[:-5] + "src\\" + "..\\data\\operations.xlsx")


@patch("pandas.read_excel")
def test_file_df(mock_get):
    data = {
        "Дата операции": ["22.01.2018 18:38:02", "30.11.2020 19:13:18"],
        "Дата платежа": ["24.01.2018", "30.11.2020"],
        "Номер карты": ["*7197", "*7197"],
        "Статус": ["OK", "OK"],
        "Сумма операции": [-124.9, -45.0],
        "Валюта операции": ["RUB", "RUB"],
        "Сумма платежа": [-124.9, -45.0],
        "Валюта платежа": ["RUB", "RUB"],
        "Кэшбэк": [0, 3],
        "Категория": ["Фастфуд", "Транспорт"],
        "MCC": [5814.0, 4111.0],
        "Описание": ["Бургер Кинг", "Троллейбус"],
        "Бонусы (включая кэшбэк)": [2, 5],
        "Округление на инвесткопилку": [0, 0],
        "Сумма операции с округлением": [124.9, 45.0],
    }
    df = pd.DataFrame(data)
    mock_get.return_value = df
    assert XLSX_file_read() == [
        {
            "Дата операции": "22.01.2018 18:38:02",
            "Дата платежа": "24.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -124.9,
            "Валюта операции": "RUB",
            "Сумма платежа": -124.9,
            "Валюта платежа": "RUB",
            "Кэшбэк": 0,
            "Категория": "Фастфуд",
            "MCC": 5814.0,
            "Описание": "Бургер Кинг",
            "Бонусы (включая кэшбэк)": 2,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 124.9,
        },
        {
            "Дата операции": "30.11.2020 19:13:18",
            "Дата платежа": "30.11.2020",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -45.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -45.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": 3,
            "Категория": "Транспорт",
            "MCC": 4111.0,
            "Описание": "Троллейбус",
            "Бонусы (включая кэшбэк)": 5,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 45.0,
        },
    ]
    mock_get.assert_called_once_with(os.getcwd()[:-5] + "src\\" + "..\\data\\operations.xlsx")
